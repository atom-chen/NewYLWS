local FixMul = FixMath.mul
local table_insert = table.insert
local BattleEnum = BattleEnum
local SkillUtil = SkillUtil
local GetSkillCfgByID = ConfigUtil.GetSkillCfgByID

local SkillHorseContainer = BaseClass("SkillHorseContainer")

function SkillHorseContainer:__init(actor)
    self.m_horseSkillList = {}
    self.m_selfActor = actor
end

function SkillHorseContainer:__delete()
    self.m_horseSkillList = nil
    self.m_selfActor = nil
end

function SkillHorseContainer:Update(deltaMS)
    for _, skillItem in pairs(self.m_horseSkillList) do
        if skillItem then
            skillItem:Update(deltaMS, self.m_selfActor)
        end
    end
end

function SkillHorseContainer:AddSkillItem(skillItem)
    if not skillItem then return end
    -- print( ' -----SkillHorseContainer AddSkillItem id', skillItem:GetSkillID(), 'level', skillItem:GetSkillLevel())
    table_insert(self.m_horseSkillList, skillItem)
end

function SkillHorseContainer:GetInsSkillItemByIdx(index)
    return self.m_horseSkillList[index]
end

function SkillHorseContainer:OnFightStart(performer)
    for _, skillItem in pairs(self.m_horseSkillList) do
        skillItem:OnFightStart(performer)
    end
end

function SkillHorseContainer:GetSkillCount()
    return #self.m_horseSkillList
end

function SkillHorseContainer:PreHurtOther(target, hurtType, skillCfg, judge)
    -- 50002
    local hurtMul = 1
    for _, skillItem in pairs(self.m_horseSkillList) do
        local skillID = skillItem:GetSkillID()
        if skillID == 60002 then
            if SkillUtil.IsAtk(skillCfg) then
                hurtMul = FixMul(hurtMul, skillItem:OnPerformInsSkill60002())
            end
        elseif skillID == 60005 then
            if SkillUtil.IsDazhao(skillCfg) or SkillUtil.IsActiveSkill(skillCfg) then
                hurtMul = FixMul(hurtMul, skillItem:OnPerformInsSkill60005())
            end
        end
    end

    return hurtMul
end

function SkillHorseContainer:PreBeHurt(target, hurtType, skillCfg, judge)
    local hurtMul = 1
    for _, skillItem in pairs(self.m_horseSkillList) do
        local skillID = skillItem:GetSkillID()
        if skillID == 60006 then
            if hurtType == BattleEnum.HURTTYPE_PHY_HURT then
                hurtMul = FixMul(hurtMul, skillItem:OnPerformInsSkill60006(self.m_selfActor))
            end
        elseif skillID == 60003 then
            if hurtType == BattleEnum.HURTTYPE_MAGIC_HURT then
                hurtMul =  FixMul(hurtMul, skillItem:OnPerformInsSkill60003())
            end
        end
    end

    return hurtMul
end

return SkillHorseContainer

