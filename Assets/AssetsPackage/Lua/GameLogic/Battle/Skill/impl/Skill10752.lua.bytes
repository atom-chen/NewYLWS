local BattleEnum = BattleEnum
local StatusGiver = StatusGiver
local StatusFactoryInst = StatusFactoryInst
local FixMul = FixMath.mul
local FixDiv = FixMath.div
local FixSub = FixMath.sub
local FixAdd = FixMath.add
local FixAbs = FixMath.abs
local CtlBattleInst = CtlBattleInst
local ActorManagerInst = ActorManagerInst
local FixIntMul = FixMath.muli
local IsInCircle = SkillRangeHelper.IsInCircle
local FixNormalize = FixMath.Vector3Normalize
local ACTOR_ATTR = ACTOR_ATTR
local Formular = Formular

local SkillBase = require "GameLogic.Battle.Skill.SkillBase"
local Skill10752 = BaseClass("Skill10752", SkillBase)

function Skill10752:Perform(performer, target, performPos, special_param)
    if not performer or not target or not target:IsLive() then
        return
    end

    -- 火焰斩 1
    -- 颜良突进到{B}米内物防最低的敌人面前发动火焰斩，令范围内的敌方目标受到{x1}（+{E}%物攻)点物理伤害，然后返回原位。
    -- 2-5
    -- 颜良突进到{B}米内物防最低的敌人面前发动火焰斩，令范围内的敌方目标受到{x2}（+{E}%物攻)点物理伤害并附加焚甲效果，
    -- 每秒降低{y2}点物防，持续{A}秒，然后返回原位。
    -- 6
    -- 颜良突进到{B}米内物防最低的敌人面前发动火焰斩，令范围内的敌方目标受到{x6}（+{E}%物攻)点物理伤害并附加焚甲效果，
    -- 每秒降低{y6}点物防，持续{A}秒，然后返回原位。颜良对范围内物防比自己低的敌人造成的伤害（不包括灼烧伤害）必定暴击。 

    if special_param.keyFrameTimes == 1 then
        local selfPos = performer:GetPosition()
        performer:SetOrignalPos(selfPos:Clone())

        local movehelper = performer:GetMoveHelper()
        if movehelper then
            local dir = target:GetPosition() - selfPos
            local distance = FixAbs(FixSub(dir:Magnitude(), target:GetRadius()))
            local moveTargetPos = FixNormalize(dir)
            moveTargetPos:Mul(distance)
            moveTargetPos:Add(selfPos)
            local pathHandler = CtlBattleInst:GetPathHandler()
            if pathHandler then
                local x,y,z = selfPos:GetXYZ()
                local x2, y2, z2 = moveTargetPos:GetXYZ()
                local hitPos = pathHandler:HitTest(x, y, z, x2, y2, z2)
                if hitPos then
                    moveTargetPos:SetXYZ(hitPos.x , selfPos.y, hitPos.z)
                end
            end

            distance = moveTargetPos:Magnitude()
            local speed = FixDiv(distance, 0.43)
            
            movehelper:Stop()
            movehelper:Start({ moveTargetPos }, speed, nil, true)
        end
    end

    if special_param.keyFrameTimes == 2 then
        BattleCameraMgr:Shake()

        local canrenStatus = performer:GetStatusContainer():HasYanliangCanren() 
        local battleLogic = CtlBattleInst:GetLogic()
        local factory = StatusFactoryInst
        local StatusGiverNew = StatusGiver.New
        local normalizedDir = performer:GetForward():Clone()
        local performerPhyDef = performer:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_PHY_DEF)

        ActorManagerInst:Walk(
            function(tmpTarget)
                if not battleLogic:IsEnemy(performer, tmpTarget, BattleEnum.RelationReason_SKILL_RANGE) then
                    return
                end

                if not self:InRange(performer, tmpTarget, normalizedDir, nil) then
                    return
                end

                local judge = Formular.AtkRoundJudge(performer, tmpTarget, BattleEnum.HURTTYPE_PHY_HURT, true)
                if self.m_level >= 6 then
                    local tmpTargetPhyDef = tmpTarget:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_PHY_DEF)
                    if tmpTargetPhyDef < performerPhyDef then
                        judge = BattleEnum.ROUNDJUDGE_BAOJI
                    end
                end

                if Formular.IsJudgeEnd(judge) then
                    return  
                end

                local injure = Formular.CalcInjure(performer, tmpTarget, self.m_skillCfg, BattleEnum.HURTTYPE_PHY_HURT, judge, self:X())
                if injure > 0 then
                    if canrenStatus then
                        local tmpTargetShield = tmpTarget:GetStatusContainer():GetTotalShieldValue()
                        if tmpTargetShield then
                            injure = FixAdd(injure, FixIntMul(injure, performer:Get10753A()))
                        end
                    end

                    local giver = StatusGiverNew(performer:GetActorID(), 10752)
                    local status = factory:NewStatusHP(giver, FixMul(-1, injure), BattleEnum.HURTTYPE_PHY_HURT, BattleEnum.HPCHGREASON_BY_SKILL, 
                                                                                                                        judge, special_param.keyFrameTimes)
                    self:AddStatus(performer, tmpTarget, status)

                    if self.m_level >= 2 then
                        local giver = StatusGiverNew(performer:GetActorID(), 10752)  
                        local buff = factory:NewStatusYanliangFenjia(giver, BattleEnum.AttrReason_SKILL, 1000, FixDiv(self:Y(), -100), nil, self:A())
                        buff:AddAttrPair(ACTOR_ATTR.FIGHT_PHY_DEF, 1)
                        self:AddStatus(performer, tmpTarget, buff)
                    end
                end
            end
        )
    end

    if special_param.keyFrameTimes == 3 then
        performer:SetPosition(performer:GetOrignalPos())
    end
end


function Skill10752:SelectSkillTarget(performer, target)
    local minPhyDef = 9999999999999
    local newTarget = false

    local selfPos = performer:GetPosition()
    local battleLogic = CtlBattleInst:GetLogic()
    ActorManagerInst:Walk(
        function(tmpTarget)
            if not battleLogic:IsEnemy(performer, tmpTarget, BattleEnum.RelationReason_SKILL_RANGE) then
                return
            end

            if not IsInCircle(selfPos, self:B(), tmpTarget:GetPosition(), tmpTarget:GetRadius()) then
                return
            end

            local tmpTargetPhyDef = tmpTarget:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_PHY_DEF)
            if tmpTargetPhyDef < minPhyDef then
                newTarget = tmpTarget
                minPhyDef = tmpTargetPhyDef
            end
        end
    )

    if newTarget then
        return newTarget, newTarget:GetPosition()
    end

    return nil, nil
end


return Skill10752