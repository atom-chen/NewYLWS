local BattleEnum = BattleEnum
local StatusGiver = StatusGiver
local StatusFactoryInst = StatusFactoryInst
local FixMul = FixMath.mul
local FixDiv = FixMath.div
local FixSub = FixMath.sub
local FixAdd = FixMath.add
local FixFloor = FixMath.floor
local CtlBattleInst = CtlBattleInst
local ActorManagerInst = ActorManagerInst
local FixIntMul = FixMath.muli
local BattleCameraMgr = BattleCameraMgr
local ACTOR_ATTR = ACTOR_ATTR
local Formular = Formular

local SkillBase = require "GameLogic.Battle.Skill.SkillBase"
local Skill10751 = BaseClass("Skill10751", SkillBase)

function Skill10751:Perform(performer, target, performPos, special_param)
    if not performer then
        return
    end

    -- 无尽刀锋 1-2
    -- 颜良挥出一道刀锋，对前方敌人造成{x1}（+{E}%物攻)点物理伤害。颜良物防每高出选中目标100点，本次攻击暴击率额外提升{B}%。
    -- 3 4
    -- 颜良挥出一道刀锋，对前方敌人造成{x3}（+{E}%物攻)点物理伤害。颜良物防每高出选中目标100点，本次攻击暴击率额外提升{B}%。
    -- 若发动技能时处于残暴之刃状态则额外获{C}%的伤害加成。
    -- 5 6
    -- 颜良挥出一道刀锋，对前方敌人造成{x5}（+{E}%物攻)点物理伤害。颜良物防每高出选中目标100点，本次攻击暴击率额外提升{B}%。
    -- 若发动技能时处于残暴之刃状态则额外获{C}%的伤害加成和{D}%的物理吸血加成。

    BattleCameraMgr:Shake()
    local canrenStatus = performer:GetStatusContainer():HasYanliangCanren() 

    local battleLogic = CtlBattleInst:GetLogic()
    local factory = StatusFactoryInst
    local StatusGiverNew = StatusGiver.New
    local normalizedDir = performer:GetForward():Clone()
    local performerPhyDef = performer:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_PHY_DEF)
    
    ActorManagerInst:Walk(
        function(tmpTarget)
            if not battleLogic:IsEnemy(performer, tmpTarget, BattleEnum.RelationReason_SKILL_RANGE) then
                return
            end

            if not self:InRange(performer, tmpTarget, normalizedDir, nil) then
                return
            end

            local factor = nil
            local tmpTargetPhyDef = tmpTarget:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_PHY_DEF)
            if performerPhyDef > tmpTargetPhyDef then
                local mul = FixFloor(FixDiv(FixSub(performerPhyDef, tmpTargetPhyDef), 100))
                if mul > 0 then
                    local chgMul = FixMul(mul, FixDiv(self:B(), 100))
                    factor = Factor.New()
                    factor.phyBaojiProbAdd = chgMul
                end
            end 

            local judge = Formular.AtkRoundJudge(performer, tmpTarget, BattleEnum.HURTTYPE_PHY_HURT, true, factor)
            if Formular.IsJudgeEnd(judge) then
                return  
            end

            local injure = Formular.CalcInjure(performer, tmpTarget, self.m_skillCfg, BattleEnum.HURTTYPE_PHY_HURT, judge, self:X())
            if injure > 0 then
                if canrenStatus then
                    if self.m_level >= 3 then
                        injure = FixAdd(injure, FixIntMul(injure, FixDiv(self:C(), 100)))
                    end 

                    if self.m_level >= 6 then
                        performer:AddSuck(FixDiv(self:D(), 100))
                    end

                    local tmpTargetShield = tmpTarget:GetStatusContainer():GetTotalShieldValue()
                    if tmpTargetShield > 0 then
                        injure = FixAdd(injure, FixIntMul(injure, performer:Get10753A()))
                    end
                end

                local giver = StatusGiverNew(performer:GetActorID(), 10751)
                local status = factory:NewStatusHP(giver, FixMul(-1, injure), BattleEnum.HURTTYPE_PHY_HURT, BattleEnum.HPCHGREASON_BY_SKILL, 
                                                                                                                    judge, special_param.keyFrameTimes)
                self:AddStatus(performer, tmpTarget, status)
            end
        end
    )
end

return Skill10751