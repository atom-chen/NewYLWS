local FixSub = FixMath.sub
local FixDiv = FixMath.div
local FixIntMul = FixMath.muli
local FixMul = FixMath.mul
local FixAdd = FixMath.add
local GetSkillCfgByID = ConfigUtil.GetSkillCfgByID
local BattleEnum = BattleEnum
local SkillUtil = SkillUtil
local StatusGiver = StatusGiver
local Formular = Formular
local StatusFactoryInst = StatusFactoryInst
local ActorManagerInst = ActorManagerInst
local CtlBattleInst = CtlBattleInst
local ACTOR_ATTR = ACTOR_ATTR

local Actor = require "GameLogic.Battle.Actors.Actor"
local Actor1042 = BaseClass("Actor1042", Actor)

function Actor1042:__init()
    self.m_10421MakeHurt = 0
    self.m_1042originalPos = false

    self.m_10423APercent = 0
    self.m_10423B = 0
    self.m_10423C = 0
    self.m_10423D = 0
    self.m_10423XPercent = 0
    self.m_10423SkillCfg = false

    self.m_chongGuanYiNu = false
    self.m_chgNextAtkPro = false
    self.m_chongGuanIntervalTime = 0
    self.m_chongGuanYiNuPerforming = false
end

function Actor1042:Add10421MakeHurt(hurt)
    self.m_10421MakeHurt = FixAdd(self.m_10421MakeHurt, hurt)
end

function Actor1042:Get10421MakeHurt()
    return self.m_10421MakeHurt
end

function Actor1042:Clear10421MakeHurt()
    self.m_10421MakeHurt = 0
end

function Actor1042:SetChgNextAtkPro(isChg)
    self.m_chgNextAtkPro = isChg
end

function Actor1042:IsChgNextAtkPro()
    return self.m_chgNextAtkPro
end

function Actor1042:SetOriginalPos(pos)
    self.m_1042originalPos = pos
end

function Actor1042:GetOriginalPos()
    return self.m_1042originalPos
end

function Actor1042:OnHPChg(giver, deltaHP, hurtType, reason, keyFrame)
    Actor.OnHPChg(self, giver, deltaHP, hurtType, reason, keyFrame)

    if deltaHP > 0 then
        return
    end

    local tmpDeltaHp = FixMul(deltaHP, -1)

    local curHP = self:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_HP)
    if curHP < 1 then
        curHP = 1
    end
    local chgHPPercent = FixDiv(tmpDeltaHp, curHP)

    if self.m_10423SkillCfg and chgHPPercent >= self.m_10423APercent then
        self.m_chongGuanYiNu = true
    end
end

function Actor1042:LogicUpdate(deltaMS)
    if self.m_10423SkillCfg and self.m_chongGuanYiNu then
        self.m_chongGuanIntervalTime = FixAdd(self.m_chongGuanIntervalTime, deltaMS)
        if self.m_chongGuanIntervalTime >= self.m_10423D then
            self.m_chongGuanYiNuPerforming = false
            return
        end

        if self.m_chongGuanYiNuPerforming then
            return
        end

        self.m_chongGuanYiNuPerforming = true

        self:AddEffect(104206) -- 测试特效

        local battleLogic = CtlBattleInst:GetLogic()
        local factory = StatusFactoryInst
        ActorManagerInst:Walk(
            function(tmpTarget)
                if not battleLogic:IsEnemy(self, tmpTarget, BattleEnum.RelationReason_SKILL_RANGE) then
                    return
                end

                local dir = tmpTarget:GetPosition() - self:GetPosition()
                dir.y = 0

                local distance2 = dir:SqrMagnitude()
                if distance2 > FixMul(self.m_10423B, self.m_10423B) then
                    return
                end

                local judge = Formular.AtkRoundJudge(self, tmpTarget, BattleEnum.HURTTYPE_REAL_HURT, true)
                if Formular.IsJudgeEnd(judge) then
                    return  
                end

                local maxHP = self:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_MAXHP)
                local curHP = self:GetData():GetAttrValue(ACTOR_ATTR.FIGHT_HP)
                local lostHP = FixSub(maxHP, curHP)
                local injure = FixIntMul(lostHP, self.m_10423XPercent)
              
                local giver = StatusGiver.New(self:GetActorID(), 10423)
                local status = factory:NewStatusHP(giver, FixMul(-1, injure), BattleEnum.HURTTYPE_REAL_HURT, BattleEnum.HPCHGREASON_BY_SKILL, judge, 0)
                tmpTarget:GetStatusContainer():Add(status, self)
            end
        )

        self:ChangeNuqi(self.m_10423C, BattleEnum.NuqiReason_SKILL_RECOVER, self.m_10423SkillCfg)

        self.m_chongGuanYiNu = false
        self.m_chgNextAtkPro = true
    end
end

function Actor1042:OnBorn(create_param)
    Actor.OnBorn(self, create_param)
    -- 被动：冲冠一怒
    -- 吕布受到单次伤害超过当前生命{a}%时，就对周围{b}米半径范围内所有敌人造成一次相当于自身已损生命{X3}%的真实伤害，
    -- 并获得{c}点怒气，同时令自己的下次普通攻击必然命中且暴击。

    local skillItem = self.m_skillContainer:GetPassiveByID(10423)
    if skillItem  then
        local skillLevel = skillItem:GetLevel()

        self.m_10423SkillCfg = ConfigUtil.GetSkillCfgByID(10423)
        if self.m_10423SkillCfg then
            self.m_10423APercent = FixDiv(SkillUtil.A(self.m_10423SkillCfg, skillLevel), 100)
            self.m_10423XPercent = FixDiv(SkillUtil.X(self.m_10423SkillCfg, skillLevel), 100)
            self.m_10423B = SkillUtil.B(self.m_10423SkillCfg, skillLevel)
            self.m_10423C = SkillUtil.C(self.m_10423SkillCfg, skillLevel)
            self.m_10423D = FixIntMul(SkillUtil.C(self.m_10423SkillCfg, skillLevel), 1000)
        end
    end
end


return Actor1042