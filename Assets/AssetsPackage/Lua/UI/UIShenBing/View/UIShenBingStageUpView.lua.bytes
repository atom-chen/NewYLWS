
local string_format = string.format
local math_ceil = math.ceil
local Language = Language
local UIUtil = UIUtil
local AtlasConfig = AtlasConfig
local ShenBingMgr = Player:GetInstance():GetShenBingMgr()
local bagItemPath = TheGameIds.CommonBagItemPrefab
local bagItem = require "UI.UIBag.View.BagItem"
local ItemIconParam = require "DataCenter.ItemData.ItemIconParam"
local UIGameObjectLoader = UIGameObjectLoader:GetInstance()

local UIShenBingStageUpView = BaseClass("UIShenBingStageUpView", UIBaseView)
local base = UIBaseView

function UIShenBingStageUpView:OnCreate()
    base.OnCreate(self)

    local titleText, newMingwenText
    titleText, self.m_InfoText, self.m_stageText,
    newMingwenText, self.m_mingwenNameText = UIUtil.GetChildTexts(self.transform, {
        "bgRoot/titleImg/titleText",
        "bgRoot/contentRoot/InfoText",
        "bgRoot/contentRoot/InfoText/StageText",
        "bgRoot/contentRoot/NewMingwenText",
        "bgRoot/contentRoot/NewMingwenText/mingwenNameText"
    })

    self.m_closeBtn, self.m_newMingwenGo,self.m_curShenBingInfoTr, self.m_backBtn = UIUtil.GetChildTransforms(self.transform, {
        "closeBtn",
        "bgRoot/contentRoot/NewMingwenText",
        "bgRoot/contentRoot/ShenBingItem",
        "backBtn"
    })
    self.m_closeBtn = self.m_closeBtn.gameObject
    self.m_backBtn = self.m_backBtn.gameObject
    self.m_newMingwenGo = self.m_newMingwenGo.gameObject
    titleText.text = Language.GetString(2918)
    newMingwenText.text = Language.GetString(2919)

    self.m_shenbingData = false
    self.m_curShenBingInfoItem = false
    self.m_infoSeq = 0

    local function onClick(go)
        self:CloseSelf()
    end

    UIUtil.AddClickEvent(self.m_closeBtn, onClick)
    UIUtil.AddClickEvent(self.m_backBtn, onClick)
end

function UIShenBingStageUpView:OnEnable(...)
    base.OnEnable(self, ...)
    local _, shenbingIndex = ...

    if shenbingIndex then
        self.m_shenbingData = ShenBingMgr:GetShenBingDataByIndex(shenbingIndex)
    end

    if self.m_shenbingData then
        local data = self.m_shenbingData
        local shenbingCfgList = ConfigUtil.GetShenbingCfgList()

        local itemCfg = ConfigUtil.GetItemCfgByID(data.m_id)
        local stage = self:GetStageByLevel(data.m_stage)
        if not self.m_curShenBingInfoItem and self.m_infoSeq == 0 then
            self.m_infoSeq = UIGameObjectLoader:PrepareOneSeq()
            UIGameObjectLoader:GetGameObject(self.m_infoSeq, bagItemPath, function(go)
                self.m_infoSeq = 0
                if not IsNull(go) then
                    self.m_curShenBingInfoItem = bagItem.New(go, self.m_curShenBingInfoTr, bagItemPath)
                    self.m_curShenBingInfoItem:SetAsFirstSibling()
                    self.m_curShenBingInfoItem:SetAnchoredPosition(Vector3.zero)
                    local itemIconParam = ItemIconParam.New(itemCfg, 1, stage, data.m_index, nil, false, false, false,
                    false, false, data.m_stage, data.m_equiped_wujiang_index == self.m_wujiangIndex)
                    self.m_curShenBingInfoItem:UpdateData(itemIconParam)
                end
            end)
        else
            local itemIconParam = ItemIconParam.New(itemCfg, 1, stage, data.m_index, nil, false, false, false,
            false, false, data.m_stage, data.m_equiped_wujiang_index == self.m_wujiangIndex)
            self.m_curShenBingInfoItem:UpdateData(itemIconParam)
        end

        if shenbingCfgList then
            for i, v in pairs(shenbingCfgList) do
                if v.id == data.m_id then
                    self.m_InfoText.text = UILogicUtil.GetShenBingNameByStage(data.m_stage, v)
                    self.m_stageText.text = string_format("+%d", data.m_stage)
                end
            end
        end

        local mingwenList = data.m_mingwen_list
        if mingwenList then
            if #mingwenList == 0 or data.m_stage % 5 ~= 0 then
                self.m_newMingwenGo:SetActive(false)
            else
                self.m_newMingwenGo:SetActive(true)
                for i, v in ipairs(mingwenList) do
                    local mingwenCfg = ConfigUtil.GetShenbingInscriptionCfgByID(v.mingwen_id)
                    self.m_mingwenNameText.text = self:GetMingwenNameColor(mingwenCfg.quality, mingwenCfg.name)
                end
            end
        end
    end
end

function UIShenBingStageUpView:GetStageByLevel(level)
    local stage = 0
if level < 5 then
        stage = CommonDefine.ItemStageType_1
    elseif level >= 5 and level < 10 then
        stage = CommonDefine.ItemStageType_2
    elseif level >= 10 and level < 15 then
        stage = CommonDefine.ItemStageType_3
    elseif level == 15 then
        stage = CommonDefine.ItemStageType_4
    end
    return stage
end

function UIShenBingStageUpView:GetMingwenNameColor(quality, name)
    if quality == CommonDefine.SHENBING_MINGWEN_QUALITY_1 then
        return string_format(Language.GetString(2932), name)
    elseif quality == CommonDefine.SHENBING_MINGWEN_QUALITY_2 then
        return string_format(Language.GetString(2933), name)
    elseif quality == CommonDefine.SHENBING_MINGWEN_QUALITY_3 then
        return string_format(Language.GetString(2934), name)
    else
        return ''
    end
end

function UIShenBingStageUpView:OnDisable()
    self.m_shenbingData = false

    UIGameObjectLoader:CancelLoad(self.m_infoSeq)
    self.m_infoSeq = 0
    self.m_curShenBingInfoItem:Delete()
    self.m_curShenBingInfoItem = false

    base.OnDisable(self)
end

function UIShenBingStageUpView:OnTweenOpenComplete()

    base.OnTweenOpenComplete(self)

    TimelineMgr:GetInstance():TriggerEvent(SequenceEventType.SHOW_UI_END, self.winName)
end

return UIShenBingStageUpView