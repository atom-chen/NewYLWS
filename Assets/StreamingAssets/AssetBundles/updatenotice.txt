                      <color=#ffb400>【那么类的静态方法的判断】</color>

  逻辑是怎样的呢？
TryParse方法先判断字符串是否能转换成uint类型数据，不能则返回false，转换成功则将uint数据转换成32位二进制数据，每八位二进制数据转换成十进制数，便转换成了最终的ip地址。像例子中的8转换成32位二进制数据为00000000000000000000000000001000，转换成ip地址为0.0.0.8。

看来以后校验ip地址还是老老实实使用正则吧
--------------------- 
                      那么类的静态方法的判断

  逻辑是怎样的呢？
TryParse方法先判断字符串是否能转换成uint类型数据，不能则返回false，转换成功则将uint数据转换成32位二进制数据，每八位二进制数据转换成十进制数，便转换成了最终的ip地址。像例子中的8转换成32位二进制数据为00000000000000000000000000001000，转换成ip地址为0.0.0.8。

看来以后校验ip地址还是老老实实使用正则吧
--------------------- 
作者：三五月儿 
来源：CSDN 
原文：https://blog.csdn.net/yl2isoft/article/details/54095131 
版权声明：本文为博主原创文章，转载请附上博文链接！那么类IPAddress的静态方法TryParse的判断逻辑是怎样的呢？ 
TryParse方法先判断字符串是否能转换成uint类型数据，不能则返回false，转换成功则将uint数据转换成32位二进制数据，每八位二进制数据转换成十进制数，便转换成了最终的ip地址。像例子中的8转换成32位二进制数据为00000000000000000000000000001000，转换成ip地址为0.0.0.8。

看来以后校验ip地址还是老老实实使用正则吧
--------------------- 
作者：三五月儿 
来源：CSDN 
原文：https://blog.csdn.net/yl2isoft/article/details/54095131 
版权声明：本文为博主原创文章，转载请附上博文链接！
作者：三五月儿 
来源：CSDN 
原文：https://blog.csdn.net/yl2isoft/article/details/54095131 
版权声明：本文为博主原创文章，转载请附上博文链接！那么类IPAddress的静态方法TryParse的判断逻辑是怎样的呢？ 
TryParse方法先判断字符串是否能转换成uint类型数据，不能则返回false，转换成功则将uint数据转换成32位二进制数据，每八位二进制数据转换成十进制数，便转换成了最终的ip地址。像例子中的8转换成32位二进制数据为00000000000000000000000000001000，转换成ip地址为0.0.0.8。

看来以后校验ip地址还是老老实实使用正则吧
--------------------- 
作者：三五月儿 
来源：CSDN 
原文：https://blog.csdn.net/yl2isoft/article/details/54095131 
版权声明：本文为博主原创文章，转载请附上博文链接！